/*
 * This file is generated by jOOQ.
 */
package com.wuhainan.jooqblog;


import com.wuhainan.jooqblog.tables.Article;
import com.wuhainan.jooqblog.tables.Category;
import com.wuhainan.jooqblog.tables.Comment;
import com.wuhainan.jooqblog.tables.Tag;
import com.wuhainan.jooqblog.tables.User;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>blog</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ARTICLE_PRIMARY = Indexes0.ARTICLE_PRIMARY;
    public static final Index CATEGORY_PRIMARY = Indexes0.CATEGORY_PRIMARY;
    public static final Index COMMENT_PRIMARY = Indexes0.COMMENT_PRIMARY;
    public static final Index TAG_PRIMARY = Indexes0.TAG_PRIMARY;
    public static final Index USER_PRIMARY = Indexes0.USER_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ARTICLE_PRIMARY = Internal.createIndex("PRIMARY", Article.ARTICLE, new OrderField[] { Article.ARTICLE.ID }, true);
        public static Index CATEGORY_PRIMARY = Internal.createIndex("PRIMARY", Category.CATEGORY, new OrderField[] { Category.CATEGORY.ID }, true);
        public static Index COMMENT_PRIMARY = Internal.createIndex("PRIMARY", Comment.COMMENT, new OrderField[] { Comment.COMMENT.ID }, true);
        public static Index TAG_PRIMARY = Internal.createIndex("PRIMARY", Tag.TAG, new OrderField[] { Tag.TAG.ID }, true);
        public static Index USER_PRIMARY = Internal.createIndex("PRIMARY", User.USER, new OrderField[] { User.USER.ID }, true);
    }
}
